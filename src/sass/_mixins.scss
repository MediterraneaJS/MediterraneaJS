/* Mixins */

@mixin opacity($opacity) {
    -moz-opacity: $opacity;
    -khtml-opacity: $opacity;
    -webkit-opacity: $opacity;
    opacity: $opacity;
    $opperc: $opacity * 100;
    -ms-filter: 'progid:DXImageTransform.Microsoft.Alpha(opacity=${opperc})';
    filter: 'none';
} // @include opacity(.4);

@mixin border-rounded($radius) {
    -moz-border-radius: $radius;
    -webkit-border-radius: $radius;
    -ms-border-radius: $radius;
    border-radius: $radius;
    background-clip: padding-box;
} // @include border-rounded(2px);

@mixin border-radius($topleft: 0, $topright: 0, $bottomleft: 0, $bottomright: 0 ) { 
    -webkit-border-radius: $topleft $topright $bottomleft $bottomright;
    -moz-border-radius: $topleft $topright $bottomleft $bottomright;
    -ms-border-radius: $topleft $topright $bottomleft $bottomright;
    border-radius: $topleft $topright $bottomleft $bottomright;
    background-clip: padding-box;
} // @include border-radius(2px, 2px, 2px, 2px);

@mixin background-image-retina($file, $type, $width, $height) { 
    background-image: url($img_path + '/' + $file + '.' + $type);
        @media only screen and (-webkit-min-device-pixel-ratio: 2),
        only screen and (-moz-min-device-pixel-ratio: 2),
        only screen and (-o-min-device-pixel-ratio: 2/1),
        only screen and (min-device-pixel-ratio: 2),
        only screen and (min-resolution: 192dpi),
        only screen and (min-resolution: 2dppx) {
        & {
          background-image: url($img_path + '/' + $file + '@2x.' + $type);
          -webkit-background-size: $width $height;
          -moz-background-size: $width $height;
          -o-background-size: $width $height;
          background-size: $width $height;
        }
    }
} // @include background-image-retina(imagename, png, 200px, 100px);


@mixin hw_accelerate {
    -webkit-transform: translateZ(0) translate3D(0,0,0);
    -webkit-backface-visibility: hidden;
	-webkit-perspective: 1000;
	
    -moz-transform: translateZ(0) translate3D(0,0,0);
    -o-transform: translateZ(0) translate3D(0,0,0);
    -ms-transform: translateZ(0) translate3D(0,0,0);
    transform: translateZ(0) translate3D(0,0,0);
} // @include hw_accelerate;